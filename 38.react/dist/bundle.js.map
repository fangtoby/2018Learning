{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/element.js","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iB;;;;;;;;;;;;AChClB,KAAK,gBAAgB;AACrB;AACA;AACA,+BAA+B,gBAAgB;AAC/C,yBAAyB,gBAAgB;AACzC,yBAAyB,gBAAgB;AACzC,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD,4BAA4B,gBAAgB;AAC5C,4BAA4B,gBAAgB;AAC5C,4BAA4B,gBAAgB;AAC5C,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA,GAAG,IAAI,sBAAsB,KAAK,sBAAsB,KAAK,sBAAsB;AACnF;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","let utils = require('./utils');\n/**\n * 1.标签类型 h1 div\n * 2.属性 className id\n * 3.子元素 可能是一个数组\n */\nclass Element {\n    //标签名 属性对象 子元素数组\n    constructor(tagName, attrs, children) {\n        this.tagName = tagName;\n        this.attrs = attrs;\n        this.children = children || [];\n    }\n    //把一个虚拟的DOM节点渲染成一个真实的DOM节点\n    render() {\n        //创建一个真实的DOM节点\n        let element = document.createElement(this.tagName);\n        //给此真实的DOM元素节点增加属性\n        for (let attr in this.attrs) {\n            utils.setAttr(element, attr, this.attrs[attr]);\n        }\n        //先序深度遍历\n        this.children.forEach(child => {\n            //如果子节点是一个元素的话，就调用它的render方法创建子节点的真实DOM，如果是一个字符串的话，创建一个文件节点就可以了\n            let childElement = (child instanceof Element) ? child.render() : document.createTextNode(child);\n            element.appendChild(childElement);\n        });\n        return element;\n    }\n}\nfunction createElement(tagName, attrs, children) {\n    return new Element(tagName, attrs, children);\n}\nmodule.exports = { createElement };","\nlet { createElement } = require('./element');\n// let diff = require('./diff');\n// let patch = require('./patch');\nlet ul1 = createElement('ul', { class: 'list' }, [\n    createElement('li', { class: 'item' }, ['1']),\n    createElement('li', { class: 'item' }, ['2']),\n    createElement('li', { class: 'item' }, ['3'])\n]);\nlet root = ul1.render();\ndocument.body.appendChild(root);\n// let ul2 = createElement('ul', { class: 'list' }, [\n//     createElement('li', { class: 'item' }, ['1']),\n//     createElement('li', { class: 'item' }, ['2']),\n//     createElement('li', { class: 'item' }, ['3']),\n//     createElement('li', { class: 'item' }, ['4'])\n// ]);\n// let patches = diff(ul1, ul2);\n// console.log(patches);\n//{2:[{type:'TEXT',content:3},4:[{type:'TEXT',content:2},6:[{type:'TEXT',content:1}]\n//patch(root, patches);\n\n","let utils = {\n    //元素变化有哪些种类\n    REMOVE: 'REMOVE',//此节点被移除\n    ATTRS: \"ATTRS\",//属性被改变\n    TEXT: \"TEXT\",//文本内容被改变\n    REPLACE: \"REPLACE\", //节点要被整个替换\n    setAttr(element, attr, value) {\n        switch (attr) {\n            case 'style':\n                element.style.cssText = value;\n                break;\n            case 'value':\n                let tagName = element.tagName.toLowerCase();\n                if (tagName == 'input' || tagName == 'textarea') {\n                    element.value = value;\n                } else {\n                    element.setAttribute(attr, value);\n                }\n                break;\n            default:\n                element.setAttribute(attr, value);\n                break;\n        }\n\n    },\n    type(obj) {\n        // [object String]\n        return Object.prototype.toString.call(obj).replace(/\\[object\\s|\\]/g, '');\n    },\n    isString(str) {\n        return utils.type(str) == 'String';\n    }\n}\nmodule.exports = utils;"],"sourceRoot":""}